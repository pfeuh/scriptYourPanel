
def addYassStuff(sketch, _x, _y):
    def addButton(sketch, x, y, text):
        sketch.addCircle(x, y, BUTTON_RADIUS)
        if text in ("GLOB", "SEQ."):
            sketch.addText(text, x + 6.35, y - 2.54, font_size=BUTTON_FONT_SIZE, anchor="start")
        elif text in ("OK", "REST", "TIE", "DATA"):
            sketch.addText(text, x, y + 12.7, font_size=BUTTON_FONT_SIZE, anchor="middle")
        else:
            sketch.addText(text, x, y + BUTTON_TEXT_Y_OFFSET, font_size=BUTTON_FONT_SIZE, anchor="middle")

    FRONT_PANNEL_WIDTH = 198
    BUTTON_FONT_SIZE = 1.524
    LED_FONT_SIZE = 1.016
    TITLE_FONT_SIZE = 4.064
    LEGEND_FONT_SIZE = 0.8382

    LED_RADIUS = 1.55
    STEP_LED_X_ORIGIN = -75.56
    STEP_LED_Y_ORIGIN = -0.635
    STEP_LED_H_INTERVAL = 8.89
    STEP_LED_H_TEXT_OFFSET = LED_RADIUS
    STEP_LED_V_TEXT_OFFSET = LED_RADIUS * 2

    BUTTON_X_ORIGIN = -75.56
    BUTTON_Y_ORIGIN = -45.085
    STEP_BUTTON_V_INTERVAL = 27.94
    BUTTON_RADIUS = 5.88
    BUTTON_LED_V_INTERVAL = STEP_LED_H_INTERVAL
    BUTTON_LED_H_INTERVAL = 0.3175
    BUTTON_TEXT_UP = 16.128
    BUTTON_TEXT_DOWN = -13.97

    # let's compute step leds
    glob_text = ["In", "Out", "Prog. num.", "Arpeggiator", "Clock in", "Clock out", "Key click ", "Audio beat", "Accept sysEx", "Transposition", "Dump all", "Load all", "Save all", "Dump global", "Load global", "Save global"]
    seq_text = ["Groove", "Step duration", "Last step", "Data mode", "C. C. number", "Fixed velo. value", "", "", "", "", "Swap", "Copy", "Load fact. seq.", "Dump seq.", "Load seq.", "Save seq."]
    x = STEP_LED_X_ORIGIN 
    y = STEP_LED_Y_ORIGIN
    r = LED_RADIUS
    for led_num in range(16):
        sketch.addCircle(x, y, r)
        sketch.addText(str(led_num+1), x, y + STEP_LED_V_TEXT_OFFSET * 0.75, font_size = LED_FONT_SIZE, anchor="middle")
        sketch.addText(glob_text[led_num], x + STEP_LED_H_TEXT_OFFSET, y + STEP_LED_V_TEXT_OFFSET * 2.0, font_size = LED_FONT_SIZE, transform="-90")
        sketch.addText(seq_text[led_num], x + STEP_LED_H_TEXT_OFFSET, y - STEP_LED_V_TEXT_OFFSET, font_size = LED_FONT_SIZE, anchor="end", transform="-90")
        x += STEP_LED_H_INTERVAL

    # let's compute buttons
    button_text =           ["PLAY", "STOP",  "PREV", "REC.", "1",  "2",  "3",  "4",  "5",  "SEQ.", "GLOB", "NEXT", "SWITCH", "TIE", "REST"]
    button_led =            [True  , False,   False,  True,   True, True, True, True, True, True,   True,   False,  True,     True,  True]
    button_nb_x_intervals = [0,       2,       4,      6,      9,    11,   13,   15,   17,   17,     17,     17,    4,        2,     0]
    button_nb_y_intervals = [0,       0,       0,      0,      0,    0,    0,    0,    0,    1,      2,      3,     3,        3,     3]
    button_x   = []
    button_y   = []
    for button_num in range(len(button_text)):
        text = button_text[button_num]
        button_x.append(BUTTON_X_ORIGIN + STEP_LED_H_INTERVAL * button_nb_x_intervals[button_num])
        button_y.append(BUTTON_Y_ORIGIN + STEP_BUTTON_V_INTERVAL * button_nb_y_intervals[button_num])
        sketch.addCircle(button_x[button_num], button_y[button_num], BUTTON_RADIUS)
        if button_led[button_num]:
            sketch.addCircle(button_x[button_num] - BUTTON_LED_H_INTERVAL, button_y[button_num] + BUTTON_LED_V_INTERVAL, LED_RADIUS)
        anchor = "middle"
        x = button_x[button_num]
        if text != "":
            if button_num < 9:
                y = button_y[button_num] + BUTTON_TEXT_DOWN
            elif button_num < 11:
                y = button_y[button_num] - 1.54
                x = button_x[button_num] + 6.6
                anchor = "start"
            else:
                y = button_y[button_num] + BUTTON_TEXT_UP
            sketch.addText(text, x, y, anchor=anchor, font_size=BUTTON_FONT_SIZE)

    # let's add 4 holes to fix board on front pannel
    sketch.addCircle(-77.47, 20.32, LED_RADIUS)
    sketch.addCircle(-77.47, -27.94, LED_RADIUS)
    sketch.addCircle(80.01, 25.4, LED_RADIUS)
    sketch.addCircle(80.01, -30.48, LED_RADIUS)

    # let's compute 4x7 segments display
    sketch.addRectangle(5.08, 38.608, 40.3098, 13.97, 0)

    # let's compute encoder button
    x = 46.99
    sketch.addCircle(x, 38.1, 7.366)
    sketch.addText("- DATA +", x, BUTTON_Y_ORIGIN + STEP_BUTTON_V_INTERVAL * 3 + BUTTON_TEXT_UP, font_size=BUTTON_FONT_SIZE, anchor="middle")

    # some advertisement
    sketch.addText("YASS", 5.08, 50.292, font_size=TITLE_FONT_SIZE, anchor="middle")
    width = FRONT_PANNEL_WIDTH
    sketch.addText("Yet Another Step Sequencer - MMXIX", -width / 2.0 + 5.08, 0, font_size=LEGEND_FONT_SIZE, anchor="middle", transform="-90")

